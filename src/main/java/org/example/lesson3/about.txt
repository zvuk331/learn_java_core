ArrayList - это массив который легко может менять свой размер. По умолчанию его размер равен 10,
если добавляется 11 элемент, то размер увеличивается на: старый размер*1.5 + 1

ArrayList устроен на обычных массивах, когда заполняется текущий массив с размером 10, то при добавление других элементов
джава создаст ещё один массив но с размером (ТР*3)/2 + 1 = 16  , после в этот новый массив копируются все элементы старого
массива. Старый удаляется, а новый остаётся, но с размером уже 16. Эта операция занимает время, поэтому если известен изначальный
размер ArrayList, то лучше создасть его с указанием на какой размер:
ArrayList<String> list = new ArrayList<>(200);   - тут размер равен 200. В дальнейшем, этот массив может увеличиваться.

List<String> list2 = new ArrayList<>(list);  - list2 копирует list, но это разные объекты.
А если
List<String> list3 = list2;  - list3 вляется ссылкой на list2; указывает на один объект


Binary Search работает так: сортируется массив от меньшего к большему, отсортированный массив делится пополам,
потом искомый элемент сравнивается с самым большим числом первого массива, если он меньше, значит искомый
элемент в первом массиве, дальше он снова делится на два массива и так далее.
Пример: Ищем 6 в массиве [0,1,2,3,4,5,6,7,8,9,10]
Шаги:
1) [0,1,2,3,4,5] [6,7,8,9,10]   5 < 6 значит интересует второй массив
2) [6,7] [8,9,10]   7>6 значит интересует первый массив
3) [6] [7,8]   6 == 6 значит нашли элемент
За 3 шага был найден элемент


TreeMap - отсортированная по возрастанию карта. Сортировка происходит по ключу.
treeMap.descendingMap() - изменяет сортировку с по возрастнию на по убыванию у TreeMap.